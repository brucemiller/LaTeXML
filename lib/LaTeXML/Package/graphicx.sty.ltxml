# -*- CPERL -*-
# /=====================================================================\ #
# |  graphicx                                                           | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #
# (See  LaTeXML::Post::Graphics for suggested postprocessing)
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;
use LaTeXML::Util::KeyVal;

#**********************************************************************
# Provides alternative argument syntax.
RequirePackage('graphics');

DefKeyVal('Gin', 'width',           'Dimension');
DefKeyVal('Gin', 'height',          'Dimension');
DefKeyVal('Gin', 'keepaspectratio', '', 'true');
DefKeyVal('Gin', 'clip',            '', 'true');

DefKeyVal('Gin', 'vrml', 'Semiverbatim');
DefKeyVal('Gin', 'magnifiable', '', 'true');

# Redefine
DefMacro('\includegraphics OptionalMatch:* []',
  '\@ifnextchar[{\@includegraphics#1[#2]}{\@includegraphicx#1[#2]}');

DefConstructor('\@includegraphicx OptionalMatch:* OptionalKeyVals:Gin Semiverbatim',
  "<ltx:graphics graphic='#path' candidates='#candidates' options='#2?#1(,clip=true)'/>",
  alias      => '\includegraphics',
  properties => sub {
    my $path = ToString($_[3]); $path =~ s/^\s+//; $path =~ s/\s+$//;
    my @candidates = pathname_findall($path, types => ['*'], paths => LookupValue('GRAPHICSPATHS'));
    if (my $base = LookupValue('SOURCEDIRECTORY')) {
      @candidates = map(pathname_relative($_, $base), @candidates); }
    (path => $path,
      candidates => join(',', @candidates)) });

#**********************************************************************
1;

