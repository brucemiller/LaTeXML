# -*- mode: Perl -*-
# /=====================================================================\ #
# |  graphicx                                                           | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #
package LaTeXML::Package::Pool;
use strict;
use warnings;
use LaTeXML::Package;
use LaTeXML::Util::Image;

#**********************************************************************
# (See  LaTeXML::Post::Graphics for suggested postprocessing)
# Provides alternative argument syntax.
RequirePackage('graphics');

DefMacro('\Gin@ewidth',  '');
DefMacro('\Gin@eheight', '');
DefMacro('\Gin@eresize', '');
#DefKeyVal('Gin', 'width',           'Dimension', '', code=>sub { DefMacro('\Gin@ewidth',$_[1]); });
DefKeyVal('Gin', 'width',           'GraphixDimension');
DefKeyVal('Gin', 'height',          'GraphixDimension');
DefKeyVal('Gin', 'totalheight',     'GraphixDimension');
DefKeyVal('Gin', 'keepaspectratio', '', 'true');
DefKeyVal('Gin', 'clip',            '', 'true');
DefKeyVal('Gin', 'scale',           '');
DefKeyVal('Gin', 'angle',           '');
# NOTE: graphicx defines @angle to actually carry out the rotation (on \box\z@) w/\Gin@erotate
# rather than to simply record the angle for later use. (also origin redefines)
# This is used by adjustbox.
# See \Gin@erotate, \Grot@box

# LaTeXML extensions:
DefKeyVal('Gin', 'vrml', 'Semiverbatim');
DefKeyVal('Gin', 'magnifiable', '', 'true');

# Redefine
DefMacro('\includegraphics OptionalMatch:* []',
  '\@ifnextchar[{\@includegraphics#1[#2]}{\@includegraphicx#1[#2]}', scope => 'global');

DefConstructor('\@includegraphicx OptionalMatch:* OptionalKeyVals:Gin Semiverbatim',
  "<ltx:graphics graphic='#path' candidates='#candidates' options='#options'/>",
  alias      => '\includegraphics',
  sizer      => \&image_graphicx_sizer,
  scope      => 'global',
  properties => sub {
    my ($stomach, $starred, $kv, $path) = @_;
    $path = ToString($path); $path =~ s/^\s+//; $path =~ s/\s+$//;
    $path =~ s/^("+)(.+)\g1$/$2/;                           # unwrap if in quotes
    my $searchpaths = LookupValue('GRAPHICSPATHS');
    if (my $svgpath = $kv && $kv->getValue('svgpath')) {    # Doesn't belong here!!!
      push(@$searchpaths, ToString($svgpath)); }
    my @candidates = pathname_findall($path, types => ['*'], paths => $searchpaths);
    if (my $base = LookupValue('SOURCEDIRECTORY')) {
      @candidates = map { pathname_relative($_, $base) } @candidates; }
    my $options = ToString($kv);
    $options .= ',clip=true' if $starred;
    my $keepaspect;
    $options .= ',';
    $keepaspect = 1 if $options =~ s/width=,//;
    $keepaspect = 1 if $options =~ s/height=,//;
    if ($keepaspect) { $options .= 'keepaspectratio=true'; }
    else             { $options =~ s/,$//; }
    (path => $path,
      candidates => join(',', @candidates),
      options    => $options); },
  mode => 'text');    # Hopefully only to affect reading of arguments

#**********************************************************************
1;
